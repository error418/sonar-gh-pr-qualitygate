@startuml analysis-flow
  skinparam monochrome true

  GitHub --> CI : trigger build
  activate CI
  CI --> SonarQube: analysis data
  deactivate CI
  activate SonarQube
  SonarQube -> Swingletree : webhook event
  deactivate SonarQube
  Swingletree --> Swingletree : look up installation id
  Swingletree -> GitHub : update check run status
@enduml

@startuml startup-flow
  skinparam monochrome true

  Swingletree -> Cache : check cache sync flag

  Swingletree -> GitHub : request all installations
  activate GitHub
  GitHub -> Swingletree: send installations (paged)
  deactivate GitHub
  Swingletree -> Cache: update installation cache
  activate GitHub
  GitHub -> Swingletree : installation added webhook event
  deactivate GitHub
  Swingletree -> Cache: update installation cache
@enduml

@startuml component-core
  skinparam monochrome true

  frame "Swingletree" {
    package "Core" {
      [Webhook Handler]
      [EventBus]
      [CheckRun Sender]
      [Installation Handler]
    }

    [Consumers]
  }
  
  frame "GitHub" {
      [GitHub API]
      [GitHub Hook Sender]
  }

  [CheckRun Sender] --> [GitHub API]
  [Webhook Handler] --> [EventBus]
  [EventBus] --> [CheckRun Sender]
  [GitHub Hook Sender] -> [Webhook Handler]

  [Installation Handler] --> [GitHub API]
  [Installation Handler] <-> [EventBus]

  [Consumers] <-> [EventBus]
@enduml

@startuml component-sonar
  skinparam monochrome true

  frame "Swingletree" {
    package "Sonar" {
      [Analysis Handler]
      [Webhook Handler]
    }

    package "Core" {
      [EventBus]
    }
  }

  frame "SonarQube" {
      [Sonar API]
      [Webhook Sender]
  }

  [EventBus] <--> [Analysis Handler]
  [Analysis Handler] --> [Sonar API]
  [Webhook Handler] <- [Webhook Sender]
  [Webhook Handler] --> [EventBus]
@enduml