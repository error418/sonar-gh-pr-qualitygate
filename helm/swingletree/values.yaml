# Default values for swingletree.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

images:
  deck: deck/deck:1.0.3
  gate: gate/gate:1.0.2
  scotty: scotty/scotty:1.0.0
  plugin:
    nebula: plugin-nebula/plugin-nebula:1.0.2
    sonar: plugin-sonarqube/plugin-sonarqube:1.0.2
    twistlock: plugin-twistlock/plugin-twistlock:1.0.2
    zap: plugin-zap/plugin-zap:1.0.2
pullPolicy: IfNotPresent
registry: docker.pkg.github.com/swingletree-oss/
imagePullSecret: regcred

service:
  type: ClusterIP
  port: 3000

# github app key file content
github_app_key: # set using `--set-file github_app_key=/path/to/file` when running helm

swingletree: # swingletree configuration

  deck: # deck configuration
    port: 3000
    elastic:
      enabled: false
      node: http://localhost:9200
      auth: # elastic nodejs auth object
        username:
        password:
        apiKey:
      index: swingletree
    features:
      dashboard: true
    github:
      page: # the GitHub App public page. Will be referenced in the Swingletree landing page.

  gate:
    port: 3000
    api:
      token: abc
    plugins:
      - id: twistlock
        base: "http://plugin-twistlock.default:3000"
      - id: zap
        base: "http://plugin-zap.default:3000"
      - id: sonarqube
        base: "http://plugin-sonar.default:3000"
      - id: nebula
        base: "http://plugin-nebula.default:3000"
        
  scotty:
    port: 3000
    storage: # storage configuration
      host: localhost # database host
      password: # database password
    elastic:
      enabled: false
      node: http://localhost:9200
      auth: # elastic nodejs auth object
        username:
        password:
        apiKey:
      index: swingletree
    github: # GitHub specific configuration
      app:
        id: # The AppId of your GitHub app instance (not installation!)
        page: # the GitHub App public page. Will be referenced in the Swingletree landing page.
        keyfile: gh-app.pem # the key file of your GitHub App (you retrieve this from the App settings page)
      base: https://api.github.com # Github Api base url
      secret: # this is the webhook secret. You should set it.
      debug: false # runs octokit in debug mode. Use this only for debug, since this can reveal secret tokens in the logs!

  nebula:
    context: gradle/nebula # defines the check status name
    debug: false # log zap webhook event requests on debug level
    port: 3000

  zap:
    context: security/zap # defines the check status name
    debug: false # log zap webhook event requests on debug level
    port: 3000

  twistlock:
    context: security/twistlock
    port: 3000

  sonar:
    port: 3000
    secret: # basic auth password protecting the webhook
    base: # SonarQube base url
    context: sonarqube # defines the check status name
    token: # API token
    debug: false # log SonarQube webhook event requests on debug level

redis: # stable/redis
  enabled: true
  fullnameOverride: swingletree-cache
  password: # set your database password with this value

ingress:
  enabled: true
  deck:
    path: /deck(/|$)(.*)
    hosts:
      - minikube
  gate:
    path: /gate(/|$)(.*)
    hosts:
      - minikube

  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
